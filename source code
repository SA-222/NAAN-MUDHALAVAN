import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score

# Load dataset
df = pd.read_csv("US_Accidents_Dataset.csv")

# Preprocess data
df = df[['Severity', 'Temperature(F)', 'Visibility(mi)', 'Weather_Condition', 'Start_Time']].dropna()
df['Hour'] = pd.to_datetime(df['Start_Time']).dt.hour

# Encode categorical data
df['Weather_Condition'] = df['Weather_Condition'].astype('category').cat.codes

# Define features and target
X = df[['Temperature(F)', 'Visibility(mi)', 'Weather_Condition', 'Hour']]
y = df['Severity']  # Usually a value from 1 to 4

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# Visualization
sns.countplot(x='Severity', data=df)
plt.title('Accident Severity Distribution')
plt.show()
